.heading {
  font-weight: bold;
  font-size: 32px;
  text-align: center;
}

.container {
  /* 
    display: flex - перетворює елемент на флекс-контейнер
  */
  display: flex;
  height: 600px;
  /* width: 800px; */

  /* 
    flex-direction - змінює напрямок головної вісі флекс контейнера

      row - зліва направо (за замовчанням)
      column - зверху вниз
      row-reverse - зправа наліво
      column-reverse - знизу уверх
  */
  /* flex-direction: column-reverse; */

  /* 
    justify-content - керує розміщенням елементу вздовж головної вісі
      flex-start - розміщує флекс дітей від початку осі до її кінця
      flex-end - розміщує флекс дітей від кінця осі до початку
      center - розміщує по центу головної осі
      space-evenly -  порівну розділяє вільний простір вздовж головної осі 
                      між усіма елементами і стінками контейнеру
                      ( х до стінок та між елементами)
      space-around - кожен елемент штовхається зліва та зправа на однакову відстать від інших елементів
                      ( х до стінок та 2х між елементами)
      space-between - елементи відштохуються один від одного але не від стінок контейнера
                      (х тількі між елементами)
  */
  /* justify-content: center; */
  
  /* 
    align-items - керує розміщенням флекс-дітей вздовж поперечної вісі
      stretch - розтягує елемент вздово бічної вісі (за замовчанням)
      flex-start - розміщує флекс дітей від початку осі до її кінця
      flex-end - розміщує флекс дітей від кінця осі до початку
      center - розміщує по центу поперечної осі
      baseline - вірівнює елементи вздовж базової лінії
  */
  /* align-items: flex-start; */

  
    /* flex-direction: row-reverse;
    justify-content: flex-end;
    align-items: flex-end;  */
 
  
    /* flex-direction: column;
    justify-content: space-evenly;
    align-items: center;  */
 

  /* flex-direction: column;
  justify-content: flex-start;
  align-items: flex-end; */


  /* 
  flex-wrap - керує кількістю ліній у контейнері
    nowrap - немає обертання дітей, 1 лінія у контейнері (за замовчанням)
    wrap - додає нові лінії до контейнеру поки всі діти не будуть розміщені
    wrap-reverse -  додає нові лінії до контейнеру поки всі діти не будуть розміщені
                    при цьому може змінювати напрямок бічної вісі
    */
  /* flex-wrap: wrap;  */

  /* 
    align-content - керує простором та вирівнюванням рядків відносно поперечної вісі
      stretch - ділить вільний простір у поперечної вісі порівну між лініями (за замовчанням)
      flex-start - розміщуються з початку поперечної вісі, простір у кінці 
      flex-end - розміщуються у кінці поперечної вісі, простір зосереджено на початку 
      center - розміщуються в центрі, простір на початку та у кінці
      space-evenly - однакова відстань між рядками та стінками  
      space-around - елементи в рядку штовхаються на однакову відстань в обидва боки
      space-between - крайні елементи біля стінок, простір рівномірно між рядків
  */
  /* align-content: flex-start; */

  /* flex-direction: column;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-content: space-between;
  align-items: center; */


  /* flex-direction: row;
  flex-wrap: wrap-reverse; */
  /* justify-content: flex-end;
  align-content: flex-start;
  align-items: stretch; */


  /* 
    flex-flow - скорочення властивостей flex-direction
                та flex-wrap
  */
  flex-flow: row;
  align-items: center;
  justify-content: center;


  border: 5px solid red;
}

.flex-item-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
  border: 5px dashed lime;
  height: 300px;
  width: 180px;
}

.flex-item {
  /* display: inline-block; */
  border: 3px solid black;
  font-size: 30px;
  padding: 15px;
  background-color: dodgerblue;
  color: white;
  /* margin: 10px; */
  /* flex-grow: 1; */
  /* flex-shrink: 0; */
}

.order {
  /* 
    order - керує візуальним відображенням флекс дітей
      за замочанням 0
      більші значення переносять елемент в кінець рядка
      негативні значення переносять елемент в початок рядка
      при однакових значеннях ордеру елементи выдображаються по їх позицыъ в html
  */
  /* order: -1; */
}

.align-self {
  /* 
    align-self -  аналог align-items але вказується 
                  конкретно до флекс-дітей
                  для конкретної дитини важливіший за align-items
  */
  /* align-self: flex-start; */
}

.margin-1 {
  /* margin: auto; */
}

.flex-basis {
  /* 
    flex-basis - базовий (потенційним) розмір флекс-дитини вздовж головної осі

    content < width/height < max-width/height < min-width/heigth 
  
    width/height < flex-basis < content
  */
  /* width: 20px; */
  /* 
    max-width: 30px;
    min-width: 200px; 
  */
  /* flex-basis: 120px; */
}

.flex-grow {
  /* 
    збільшує розміри флекс дитини пропорційно до розмірів інших дітей
    за рахунок вільного місця вздовж головної вісі
    за замовчанням 0

    ширина флекс-контейнеру 800px
    -10 px на бордер = 790px
    ширина дитей 51px
    51 * 5 = 255px

    вільного простору контейнера = 790 - 255 = 535px

    4 дитини з flex-grow = 0
    1 дитина з flex-grow = 1

    0 + 1 + 0 + 0 + 1 = 2
      535px / 2 = 267.5px

    51 + 0 * 267.5 = 51
    51 + 1 * 267.5 = 318.5
    51 + 0 * 267.5 = 51
    51 + 0 * 267.5 = 51
    51 + 1 * 267.5 = 318.5
  */
  flex-grow: 1;
}

.flex-shrink {
  /* 
    зменшує розміри флекс дитини пропорційно до розмірів інших дітей
    за рахунок вільного місця вздовж головної вісі
    за замовчанням 1
  */
  flex-shrink: 0.5;
}

/* .flex-item:nth-child(3) {
  font-size: 70px;
}

.flex-item:nth-child(5) {
  font-size: 12px;
} */

.flex-item:nth-child(5) {
  /* width: 150px; */
  /* height: 100px; */
}